Jan Smółka
Instrukcja użytkowania programu realizującego zadanie 3.

1. Struktura programu:
	1.1. Kod podzielono na pakiety Main.jl, BasicDatatypec.jl, PlotPreprocess.jl, PolygonGenerator.jl, GeometricPredicates.jl, PointClassification.jl, PolygonTriangulation.jl oraz InteractivePlot.py

	1.2. Dla osiągnięcia pełnego współdziałania konieczne jest posiadanie kompilatora języka Julia oraz interpretera języka Python, wraz z dostarczanymi przez producentów środowiskami "virtualenv".
	Ponadto, konieczne są dodatkowe biblioteki, możliwe do zainstalowania poprzez dedykowane narzędzia - 
	Pkg (Dostępne w interaktywnym terminalu Julii, instalowanym wraz z językiem) oraz Pip (Dostępne poprzez wiersz polecenia / emulator terminalu).

	1.3. Wymagane są pakiety:
		
		1.3.1. Dla języka Julia:
			1.3.1.1. Plots
			1.3.1.2. LinearAlgebra
			1.3.1.3. PyCall
			
		1.3.2. Dla języka Python:
			1.3.2.1. MatPlotLib
			
	1.4. Aby móc komfortowo obsługiwać interaktywne narzędzie do zadawania wielokątów i odczytywać wyniki funkcji wizualizujących, 
	polecam korzystać ze środowiska programistycznego Visual Studio Code, z zainstalowanymi wtyczkami Julii i Pythona.
	Gwarantuje to niezawodne działanie bibliotek odpowiedzialnych za rysowanie wykresów.

2. Użytkowanie programu:
	2.1. Funkcja main() z pakietu Main.jl wykonuje kolejne działania prowadzące do otrzymania wyniku.
	Należy wywołać ją według schematu:

		main(
			n = <Liczba punktów losowo generowanego wielokąta, domyślnie ustalona na 10; argument ignorowany przez funkcję w przypadku zadania wielokąta z góry>, 
			explicit_polygon = <Wielokąt zadany jako lista punktów (a dokładniej instancja typu Array{Array{Float64, 1}, 1})>
			readfrom = <Bezwzględna ścieżka do pliku *.txt, którego kolejne rekordy są postaci "(współrzędna x punktu, wzpółrzędna y punktu)">
			click = <true/false - zadanie wielokąta w trybie interaktywnym>
			display_plot = <true/false - czy wygenerować wykres>
			animate = <true/false - jeśli wygenerować wykres, to czy ma on być animowany>
			tofile = <napis - nazwa pliku, do którego program ma zapisać wykres, o ile takowy jest generowany>
			display_classification = <true/false - czy wyświetlić na wykresie klasyfikację punktów (łącząe, dzielące itd.), o ile takowy jest generowany>
			display_chains = <true/false - czy wyświetlić na wykresie podział na łańcuchy, o ile takowy jest generowany>
		)

	2.2. Dla argumentów funkcji main istnieje hierarchia ważności:
		2.2.1. Kolejne metody zadania wielokąta brane są pod uwagę w kolejności:
			2.2.1.1. Lista przekazana jako argument explicit_polygon
			2.2.1.2. Wielokąt zadany interaktywnie
			2.2.1.3. Wielokąt wczytany z pliku
		Jeśli żadna z powyższych metod nie zostanie wykorzystana, program wygeneruje losowy wielokąt o szczególnej postaci, o liczbie wierzchołków równej 2 * n.
		
		2.2.2. Kolejne opcje generowanego wykresu brane są pod uwagę w kolejności:
			2.2.2.1. display_plot - czy wykres ma zostać wygenerowany
			2.2.2.2. display_chains - czy zaznaczyć przynależność punktów do łańcucha górnego i dolnego
			2.2.2.3. display_classification - czy zilustrować klasyfikację punktów
			2.2.2.4. to_file - czy zapisać obraz do pliku o podanej nazwie
		
	2.3. Dodatkowe uwagi odnośnie wywołania:
		2.3.1. Argumenty readfrom i tofile muszą mieć postać napisów (instancji typu String), a zatem muszą być zapisane przy użyciu cudzosłowu
		2.3.2. Plik, z którego wczytywany jest wielokąt, musi mieć szczególną postać. Każdy z rekordów winien zawierać współrzędne jednego punktu, zapisane z użyciem nawiasu w formie (współrzędna x, współrzędna y)
		2.3.3. Po wywołaniu funkcj main() program nie powinien zawierać żadnych dodatkowych instrukcji, 
			ponieważ mogą one zaburzyć funkcjonowanie wyjścia, a w konsekwencji niewyświetlenie się wykresu
		2.3.4. Program operuje wyłącznie na wielokątach ściśle x-monotonicznych, zadanych przeciwnie do ruchu wskazówek zegara
		 	i nie odpowiada za błędne wyjście w innych przypadkach. Weryfikacja monotoniczność jest zaimplementowana do celów pokazowych, jej działanie jest pomijane.
		2.3.5. Obraz nie zostanie wygenerowany, jeśli funkcja zostanie wywołana z argumentem display_plot ustawionym na wartość false
		2.3.6. Lokalizacja, w której zostanie umieszczony obraz, zależy od bieżącego katalogu użytkownika (./)
		2.3.7. Funkcja main podaje w konsoli czas wykonania algorytmu triangulacji, w sekundach, do pięciu miejsc po przecinku
		
